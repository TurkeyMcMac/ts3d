#!/bin/sh -ex
#
# Record the GIF image to use as the logo in the README. This isn't very
# polished, and you may have to tweak the script to get things to look right. If
# you see flickering in the output GIF, rerun the script and hope it works.
#
# Dependencies:
#  - asciinema
#  - asciicast2gif
#    - ImageMagick
#    - gifsicle or giflossy
#
# Usage: ./rec-logo-gif [filename]
# If a filename is given, the GIF is put there instead of at ./logo.gif. There
# are some environment variables available you may have to set if the size in
# text cells of the frog entity changes. Here they are:
#  - FROG_WIDTH: The width in text cells of the frog entity.
#  - GIF_WIDTH: The width in text cells of the output GIF.
#  - GIF_HEIGHT: The height in text cells of the output GIF.

# Output GIF:
gif=${1:-logo.gif}

# Environment variable default:
FROG_WIDTH=${FROG_WIDTH:-16}
GIF_WIDTH=${GIF_WIDTH:-88}
GIF_HEIGHT=${GIF_HEIGHT:-19}

# Set up the directories:
cd "$(dirname "$0")"
ts3d_dir=$PWD
working_dir=$PWD/.rec-logo-gif
rm -rf "$working_dir"
mkdir "$working_dir"
trap 'rm -r "$working_dir"' EXIT
cd "$working_dir"

# Set up the files:
cat > banner <<EOF
33333333333333     WWWWWW      NNNNNNN     <<<<<<<<<  
3     33     3    WW    WW   NNN     NN     <<     <<<
      33         WW      W   N       NN     <<      <<
      33        WW                   NN     <<      <<
     33         WW                   NN     <<      <<
     33         WW                   NN     <<      <<
     33         WW                  NN     <<       <<
     33          WW              NNNN      <<       <<
    33            WW                NN     <<       <<
    33             WW                NN    <<       <<
    33              WW               NN    <<       <<
    33              WW               NN   <<       << 
    33              WW               NN   <<       << 
   33               WW              NN    <<       << 
   33               WW              NN    <<      <<  
   33              WW              NN     <<      <<  
   33      W      WW      N       NN     <<      <<   
   33      WW   WWW       NN    NNN      <<    <<<    
  3333      WWWWW          NNNNNN       <<<<<<<<      
EOF
mkdir -p data/ents
mkdir -p data/textures
cat > data/ents/logo.json <<EOF
{
 "frames": [
  ["logo-1", 6],
  ["logo-2", 2],
  ["logo-3", 1],
  ["logo-4", 1],
  ["logo-5", 1],
  ["logo-6", 2],
  ["logo-7", 3],
  ["logo-8", 4],
  ["logo-7", 3],
  ["logo-6", 2],
  ["logo-5", 1],
  ["logo-4", 1],
  ["logo-3", 1],
  ["logo-2", 2]
 ]
}
EOF
for i in 1 2 3 4 5 6 7 8; do
	frog_frame="$ts3d_dir/data/textures/frog-$i"
	logo_frame="data/textures/logo-$i"
	# Pad the left frog:
	awk "{printf\"%-${FROG_WIDTH}s\n\",\$0}" "$frog_frame" > left-frog
	paste -d ' ' left-frog banner "$frog_frame" > "$logo_frame"
	# Extra line to hide the cursor:
	printf '\n' >> "$logo_frame"
done

# Move the texture colorizer to this directory so it sees the files made above:
ln -s "$ts3d_dir/texture" .

# Record the GIF:
asciinema rec -c './texture animate data/ents/logo.json' logo.cast > /dev/null
cd "$ts3d_dir"
export GIFSICLE_OPTS='-O3 --scale 0.5'
asciicast2gif -w "$GIF_WIDTH" -h "$GIF_HEIGHT" "$working_dir/logo.cast" "$gif"
