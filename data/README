./
--
This directory contains game data for the game Thing Shooter 3D (ts3d.) Some
file names are shortened and are thus different than their labels. This is
because the maximum POSIX file name length is technically 14 bytes. Shortening
the names has no practical value; I'm just a bit obsessed.

./menu.json
-----------
This is the structure of the game menu. There are three types of menu item.
 1. Items with an "items" key are displayed as a list of links to those
    sub-items.
 2. Items with a "text" attribute will display the contents of the text file
    with the given path relative to the data directory. The contents are not
    wrapped by the program, so wrap the contents yourself to 40 columns.
 3. Items with a "tag" attribute have various functions. Values starting with
    "act/" refer to specific actions with self-explanatory names. Values
    containing no slash will open the map with the specified name.

./About
-------
This provides some background for the game, available through the menu.

./help/
-------
This directory contains several text files that give help information for the
game menu.

./textures/
-----------
This directory contains all game textures. Texture names are paths relative to
this directory. Each texture file is ASCII text, and each character corresponds
to a pixel type. Spaces become transparent. The 64 characters after the space in
the ASCII character set are differentiated by their offset from the space from 0
to 63. The lower 3 bits of the offset are the background color. The upper 3 are
the foreground color displayed as a colored pound sign. The 8 colors are, in
order of their values from 0 to 7: black, red, green, yellow, blue, magenta,
cyan, white.

Both sprite textures and wall textures are included. Wall textures cannot have
any transparent pixels and are stretched to fit a square space. Sprite textures
can have transparency and are stretched to fit the "width" and "height" of their
entities.

./ents/
-------
This directory contains the list of entities in the game. An entity is a being
that appears in the game. Entities might run/shoot at the player, or they might
be stationary. Technically, the player itself is also an entity, but this is a
bit of a hack. Entity names are paths relative to this directory with the
".json" at the end omitted.

Entities have many attributes. Most numeric ones default to zero. The list is as
follows:
 - "name": A string with a human-readable name. This is currently unused.
 - "team_override": The team this entity will always be on. If this is not given
   then the team is determined in the map file. Teams are as follows:
    * "ghost": This entity interacts with nothing and is purely visual.
    * "unaligned": This entity can damage anything other than a ghost or a
      pickup, including other unaligned entities.
    * "player": This entity is a player that interacts with enemies and pickups.
    * "ally": This entity is a bullet of the player that can damage enemies.
    * "enemy": This is an enemy that can damage the player and their allies.
    * "pickup": This is an item for the player only to "pick up" by colliding
      with it.
 - "width": The width of the entity in blocks. This is used to size the frame as
   well as for collisions.
 - "height": The height of the entity. This is only used to size the frame.
 - "shoot_chance": The percent chance that the entity will shoot in a given game
   tick. This is treated differently for players.
 - "turn_chance": The percent chance that the entity will turn toward the player
   in a given tick. Between such ticks, the entity moves in a straight line.
   This is also treated differently for players.
 - "speed": The number of blocks an entity moves per tick.
 - "death_spawn": The name of the entity spawned when this one dies. A frog, for
   example, spawns a ghost entity when it dies. If this is not present, the
   entity just disappears.
 - "lifetime": The number of ticks the entities survives. If unspecified, the
   lifetime is infinite.
 - "health": The amount of health points the entity starts with.
 - "damage": The amount of health points in damage the entity deals to the
   player per tick when they are touching.
 - "wall_die": A boolean defaulting to false saying whether this entity dies
   instantly when it touches a wall.
 - "bullet": The name of the entity this entity shoots at the player. If this is
   not present, the entity does not shoot. The bullet has the same team as the
   shooter unless its "team_override" is set.
 - "random_start_frame": A boolean indicating whether the animation starts at a
   random frame. The default is false.
 - "frames": A list of textures to use as frames. An item can be just the name,
   in which case the texture is displayed for 1 tick, or a list containing a
   name then a number, in which case the named texture is displayed for the
   number of ticks specified.

Hopefully I got all of them there.

Some attributes are special for played entities:
 - "turn_chance": The player can turn 0.025- turn_chance radians per tick.
 - "shoot_chance": The player takes 100 / shoot_chance ticks to reload.
 - "wall_die": Players never die when they touch a wall.
 - "frames": Players are invisible, so frames are ignored.

./ents/player.json
------------------
This is the main player entity currently in use. The remarks above apply. If you
want to change your abilities to make the game harder or easier, change
./ents/player.json.

./maps/
-------
The list of maps, AKA levels. Map names are paths relative to this directory
with the ".json" at the end omitted. Maps are what the player plays from the
game menu.

Map attributes are as follows:
 - "prereq": The name of the level which must be won before this one is
   available. If this is unspecified, the level is always playable.
 - "blocks": A list of blocks used in the level. Each item has these keys:
    * "name": A descriptive name that is unused by the program.
    * "<face>": The name of a texture on a given face. The face can be "top",
      "bottom", "north", "south", "east", "west", or "all" (to affect all
      faces.) The default is transparent.
    * "<face>_solid": A boolean specifying whether the given face can be moved
      through or not. The default is false.
 - "layout": A two-dimensional array of integers. Each is an index into the list
    of blocks, starting at zero. The block at that index will be placed at the
    position in the matrix.
 - "ents": The list of entities starting on the map. Each has these keys:
    * "kind": The name of the entity type to spawn. This is required.
    * "pos": The cartesian coordinate start position relative to the top left
      corner. This is required.
    * "team": The team name. This defaults to "unaligned" or, if it exists, to
      the team override, which can also override any given value.
 - "player": An object with the same format as an item of "ents". It describes
   how the player starts out.

./maps/title.json
-----------------
This is the map that is loaded to produce the screensaver next to the menu. You
may notice that its player kind is "health", not "player". This is because the
map is not meant to be played. "health" is used because it does not require
loading as many textures and other resources as "player".
